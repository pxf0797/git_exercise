/**************************************************************************
* @copyright    :Copyright(C), 2018, pxf, person.
* @file         :csLed.h
* @author       :pxf
* @version      :v1.0
* @date         :2018/08/26 21:32:19
* @brief        :
* @others       :
* @history      :180826 pxf 初次建立
***************************************************************************/

#ifndef CSLED_H_
#define CSLED_H_

#include "..\..\01_std\std.h"
#include "..\..\06_cas\casSch\casSch.h"
#include "csLedCfg.h"
#include "csLedErrCode.h"

/***********************************************************
* 组件初始化
***********************************************************/
/*组件输入初始化
* 输入: 无
* 输出: int16 0-成功,-1-失败
***********************************************/
int16 vfbIcsLedInit(void);

/*组件初始化
* 输入: 无
* 输出: int16 0-成功,-1-失败
***********************************************/
int16 csLedInit(void);

/*组件输出初始化
* 输入: 无
* 输出: int16 0-成功,-1-失败
***********************************************/
int16 vfbOcsLedInit(void);

/*管理组件初始化外部声明
* 输入: 无
* 输出: int16 0-成功,-1-失败
***********************************************/
extern int16 vfbMcsLedInit(void);


/***********************************************************
* 组件调度
***********************************************************/
/*组件进行调度
* 输入: 无
* 输出: 无
***********************************************/
void csLedSch(void);


/***********************************************************
* 组件输入类通用数据类型
***********************************************************/


/***********************************************************
* 组件输出类通用数据类型
***********************************************************/


/***********************************************************
* 组件输出类定义
***********************************************************/
/*组件输出类声明
***********************************************/
CL(vfbOcsLed){
    hvfbOcsLed self;
    hvfbOcsLed (*init)(hvfbOcsLed cthis);

    // 组件调度参数
    schParam schParam;

    // 示例组件输出类功能函数
    //void (*example)(hvfbOcsLed t);
    //TODO
};

/*外部接口声明
*  命名方式: 存放类+实际类+实际类功能
***********************************************/
//extern void vfbMcsLed_vfbOcsLed_example(hvfbOcsLed t);
//TODO

/*组件输出类实例
***********************************************/
extern vfbOcsLed vfbOcsLedA;


/***********************************************************
* 组件类定义
***********************************************************/
/*组件状态机状态
***********************************************/
#define SM_CSLED_STA_LIST(_) \
    _(smcsLed, sta1)\
    _(smcsLed, sta2)

/*组件状态机定义
***********************************************/
SMDC(smcsLed, SM_CSLED_STA_LIST)
{
    sta next;
    //TODO

    // 注入组件类
    void *csLed;
};


/*组件类声明
***********************************************/
CL(csLed){
    hcsLed self;
    hcsLed (*init)(hcsLed cthis, hvfbOcsLed vfbOcsLed, hstaAct smcsLed);

    // 组件运行状态机
    smcsLedRec smcsLedRec;
    hstaAct smcsLed;

    // 组件运行功能函数
    void (*run)(hcsLed t);
    //void (*example)(hcsLed t);
    //TODO

    // 注入组件输出类
    INJ(vfbOcsLed, vfbOcsLed);
};

/*异步调度功能函数
*  命名方式: 存放类+实际类+实际类功能
***********************************************/
//extern void csLed_abi_example(void);
//TODO

/*组件类实例
***********************************************/
extern csLed csLedA;


/***********************************************************
* 组件输入类定义
***********************************************************/
/*组件输入类声明
***********************************************/
CL(vfbIcsLed){
    hvfbIcsLed self;
    hvfbIcsLed (*init)(hvfbIcsLed cthis, hcsLed csLed);

    //void (*example)(hvfbIcsLed t);
    //TODO

    // 注入组件类
    INJ(csLed, csLed);
};

/*组件输入类实例
***********************************************/
extern vfbIcsLed vfbIcsLedA;


#endif

/**************************** Copyright(C) pxf ****************************/
